<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_monster</parentName>
  <maskName>d_base1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_ani_ini(id, 1, 0);
culpa = m_culpa_ira;
despierto = true;
reloj_accion = random(m_reloj_accion);
direction = random(360);
mover = choose(true, false);
reloj_errar = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// animacion
s_ani_osci(id, 0, m_ani_monsters, 0.1);
// ejecutar accion especial
reloj_accion -= dlt;
if reloj_accion &lt;= 0 {
    reloj_accion += m_reloj_accion + random(1);
    if despierto {
        var vision = m_vision;
        var ss = s_solo(m_culpa_ira);
        if ss {
            vision *= m_visimax_p;
        }
        // incendiar a los cercanos segun grupo
        var yo = id;
        var tipo = ds_priority_create();
        for (var i = 0; i &lt;= 7; i++) {
            ds_priority_add(tipo, i, 0);
        }
        with o_alma {
            if point_distance(x, y, yo.x, yo.y) &lt; vision {
                ds_priority_change_priority(tipo, culpa,
                    ds_priority_find_priority(tipo, culpa) + 1);
            }
        }
        var t = ds_priority_find_max(tipo);
        if ds_priority_find_priority(tipo, t) != 0 {
            ds_priority_delete_max(tipo);
            var u = ds_priority_find_max(tipo);
            if ss or ds_priority_find_priority(tipo, u) != 0 {
                with o_alma {
                    if point_distance(x, y, yo.x, yo.y) &lt; vision {
                        if culpa == t {
                            culpa = m_culpa_ira;
                            s_voz(yo.x, yo.y, m_culpa_ira, true);
                            reloj_fuego = random_range(m_reloj_accion,
                                m_reloj_accion * 2);
                        }
                    }
                }
            }
        }
        ds_priority_destroy(tipo);
    }
}
// cambiar direccion al errar
reloj_errar -= dlt;
if reloj_errar &lt;= 0 {
    reloj_errar += random_range(2, 4);
    if mover {
        mover = choose(true, true, false);
        direction += random_range(-90, 90);
    }
    else {
        mover = choose(true, false, false);
        direction = random(360);
    }
}
// colision con objetos, luego ejecutar IA
if s_colisiones(id) and despierto {
    // errar libremente
    if mover {
        var v = m_velocidad * dlt;
        x += lengthdir_x(v, direction);
        y += lengthdir_y(v, direction);
    }
}
// prevenir salirse del mundo
s_limites(id);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if arte {
    draw_sprite_ext(d_monster, m_culpa_ira, x, y, 1, 1 + anima[0], 0, c_white, 1);
}
else {
    draw_sprite_ext(d_base1, 0, x, y, 1, 1, 0, s_color(m_culpa_ira), 1);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
