<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_monster</parentName>
  <maskName>d_base1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_ani_ini(id, 1, 0);
culpa = m_culpa_orgullo;
despierto = true;
reloj_accion = random(m_reloj_accion);
direction = random(360);
presos = ds_list_create();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(presos);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// animacion
s_ani_osci(id, 0, m_ani_monsters, 0.1);
// ejecutar accion especial
reloj_accion -= dlt;
if reloj_accion &lt;= 0 {
    reloj_accion += m_reloj_accion + random(1);
    if despierto {
        var vision = m_vision;
        if s_solo(m_culpa_orgullo) {
            vision *= m_visimax_p;
        }
        // administrar a los presos existentes
        var aux;
        for (var p = ds_list_size(presos) - 1; p &gt;= 0; p--) {
            aux = ds_list_find_value(presos, p);
            if instance_exists(aux) {
                if aux.culpa != m_culpa_orgullo {
                    ds_list_delete(presos, p);
                }
                else if point_distance(x, y, aux.x, aux.y) &gt; vision {
                    if random(1) &lt; 0.5 {
                        with aux {
                            instance_destroy();
                        }
                    }
                    else {
                        aux.chilla = random(m_delay_voz);
                    }
                    ds_list_delete(presos, p);
                }
            }
            else {
                ds_list_delete(presos, p);
            }
        }
        // agarrar nuevos presos
        var yo = id;
        var reclu = 4;
        with o_alma {
            if point_distance(x, y, yo.x, yo.y) &lt; vision {
                if culpa == m_culpa_orgullo {
                    if ds_list_find_index(yo.presos, id) != -1 {
                        continue;
                    }
                }
                culpa = m_culpa_orgullo;
                s_voz(yo.x, yo.y, m_culpa_orgullo, true);
                ds_list_add(yo.presos, id);
                reclu--;
                if reclu &lt;= 0 {
                    break;
                }
            }
        }
    }
}
// poner cuerdas visualmente
if arte {
    with o_cuerda {
        active = false;
    }
    var aux;
    for (var p = 0; p &lt; ds_list_size(presos); p++) {
        aux = ds_list_find_value(presos, p);
        if instance_exists(aux) {
            if aux.culpa == m_culpa_orgullo {
                s_cuerda(x, y, aux.x, aux.y);
            }
        }
    }
}
// colision con objetos, luego ejecutar IA
if s_colisiones(id) and despierto {
    var xx = 0;
    var yy = 0;
    var tot = 0;
    var aux;
    for (var p = 0; p &lt; ds_list_size(presos); p++) {
        aux = ds_list_find_value(presos, p);
        if instance_exists(aux) {
            if aux.culpa == m_culpa_orgullo {
                xx += aux.x;
                yy += aux.y;
                tot++;
            }
        }
    }
    if tot != 0 {
        xx /= tot;
        yy /= tot;
        var marg = 16;
        if tot == 1 {
            marg = 96;
        }
        if point_distance(x, y, xx, yy) &gt; marg {
            direction = point_direction(x, y, xx, yy);
            var v = m_velocidad * dlt;
            x += lengthdir_x(v, direction);
            y += lengthdir_y(v, direction);
        }
    }
}
// prevenir salirse del mundo
s_limites(id);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if arte {
    draw_sprite_ext(d_monster, m_culpa_orgullo, x, y, 1, 1 + anima[0], 0, c_white, 1);
}
else {
    draw_sprite_ext(d_base1, 0, x, y, 1, 1, 0, s_color(m_culpa_orgullo), 1);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
